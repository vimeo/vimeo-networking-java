apply plugin: 'java'
apply plugin: 'maven-publish'

compileJava {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.6'
        classpath 'gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.8'
    }
}

apply plugin: 'net.ltgt.apt'
apply plugin: 'de.fuerstenau.buildconfig'

repositories {
    jcenter()
}

tasks.withType(Javadoc).all { enabled = true }

dependencies {
    testCompile 'junit:junit:4.12'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.intellij:annotations:12.0@jar'

    def retrofitVersion = '2.2.0'
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    def stagVersion = '2.2.0'
    compile "com.vimeo.stag:stag-library:$stagVersion"
    apt "com.vimeo.stag:stag-library-compiler:$stagVersion"
}

group = 'com.vimeo.networking'

buildConfig {
    appName = project.name
    version = project.version

    clsName = 'BuildConfig'
    packageName = project.group
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

// Create the pom configuration
// All the fields below are required by Maven Central
def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "vimeo"
            name "Vimeo Mobile"
            email "mobileops@vimeo.com"
            organisation "Vimeo"
            organisationUrl "https://github.com/vimeo"
        }
    }
    
    scm {
        connection "scm:git:git://github.com/vimeo/vimeo-networking-java.git"
        developerConnection "scm:git:ssh://github.com:vimeo/vimeo-networking-java.git"
        url "https://github.com/vimeo/vimeo-networking-java"
    }
}

// Create the publication with the pom configuration:
// Requires apply plugin: maven-publish
publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId 'vimeo-networking'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'vimeo-networking is a Java networking library used for interacting with the Vimeo API.')
                root.appendNode('name', 'vimeo-networking')
                root.appendNode('url', 'https://github.com/vimeo/vimeo-networking-java')
                root.children().last() + pomConfig
            }
        }
    }
}

// Only execute the bintray task if this is the actual networking project (not an include)
allprojects {
    afterEvaluate { project ->
        def bintrayProject = project.plugins.hasPlugin('com.jfrog.bintray')
        if (bintrayProject) {
            bintray {
                user = System.getenv('BINTRAY_USER')
                // api key
                key = System.getenv('BINTRAY_API_KEY')
                publications = ['MyPublication']
                dryRun = false // Whether to run this as dry-run, without deploying
                override = false
                pkg {
                    repo = 'maven'
                    name = 'vimeo-networking'
                    userOrg = 'vimeo'
                    licenses = ['MIT']
                    websiteUrl = 'https://github.com/vimeo/vimeo-networking-java'
                    issueTrackerUrl = 'https://github.com/vimeo/vimeo-networking-java/issues'
                    vcsUrl = 'https://github.com/vimeo/vimeo-networking-java.git'
                    labels = ['vimeo', 'android', 'java', 'networking', 'api']
                    publicDownloadNumbers = true
                    version {
                        name = project.version
                        vcsTag = project.version
                        gpg {
                            sign = true
                            passphrase = System.getenv('BINTRAY_GPG_PASSWORD')
                        }
                        mavenCentralSync {
                            sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
                            user = System.getenv('SONATYPE_TOKEN_USER') //OSS user token
                            password = System.getenv('SONATYPE_TOKEN_PASSWORD') //OSS user password
                            close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
                        }
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3.0'
}
