apply plugin: 'java-library'
apply plugin: 'kotlin'

compileJava {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.16'
        classpath 'gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.8'
    }
}

apply plugin: 'net.ltgt.apt'
apply plugin: 'de.fuerstenau.buildconfig'
apply from: '../publish.gradle'

repositories {
    jcenter()
}

tasks.withType(Javadoc).all { enabled = true }

dependencies {
    api project(':models')

    def retrofitVersion = '2.5.0'
    api "com.squareup.retrofit2:retrofit:$retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    implementation "com.squareup.moshi:moshi-adapters:1.7.0"

    implementation 'org.jetbrains:annotations:17.0.0'

    def stagVersion = '2.5.1'
    implementation ("com.vimeo.stag:stag-library:$stagVersion"){
        exclude group: 'com.intellij', module: 'annotations'
    }
    apt "com.vimeo.stag:stag-library-compiler:$stagVersion"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation "org.assertj:assertj-core:3.11.1"
}

buildConfig {
    appName = project.name
    version = project.version

    clsName = 'BuildConfig'
    packageName = project.group
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs += [ "-AstagAssumeHungarianNotation=true" ]
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3.0'
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        aptOptions.processorArgs = [
                stagAssumeHungarianNotation: "true"
        ]
    }
}
